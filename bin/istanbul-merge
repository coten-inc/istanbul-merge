#!/usr/bin/env node

'use strict';

var flatMap = require('array.prototype.flatmap');

var options = require('yargs')
	.string('out')
	.describe('out', 'output path for merged raw coverage report JSON file')
	.normalize('out')
	.require('out', 'output JSON path is required')
	.require(1, 'at least one path to raw coverage report JSON files is required')
	.string('_')
	.describe('_', 'paths to raw coverage report JSON files to merge')
	.help()
	.usage('Usage: $0 --out path/to/output.json "a/**.json" b/input.json')
	.version()
	.argv;

var fs = require('fs');
var path = require('path');
var forEach = require('for-each');
var glob = require('glob');
var istanbul = require('istanbul-lib-coverage');
var mkdirp = require('mkdirp');

var files = flatMap(options._, function (input) {
	return glob.sync(input, {
		mark: true,
		nosort: true,
		strict: true
	});
});

var map = istanbul.createCoverageMap({});
forEach(files, function (file) {
	var json = fs.readFileSync(file);
	map.merge(JSON.parse(json));
});

var output = path.resolve(options.out);
mkdirp.sync(path.dirname(output));
fs.writeFileSync(output, JSON.stringify(map));
